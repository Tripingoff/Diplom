<Window x:Class="ИС_ККТД.Windows.Sotrudnik"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ИС_ККТД.Windows"
        mc:Ignorable="d"
        Title="{Binding ElementName=PagesNavigation, Path=Content.Title}" MinHeight="768" MinWidth="1366" MaxHeight="1060" Background="Transparent" MaxWidth="1900" WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="True">
    <Window.Resources>
        <SolidColorBrush x:Key="PrimaryBlueColor" Color="#5B7FFF"/>
        <SolidColorBrush x:Key="PrimaryGrayColor" Color="#707070"/>
        <Style x:Key="ComboboxButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" CornerRadius="11" BorderThickness="0" BorderBrush="#707070" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuIconStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Width" Value="5"/>
            <Setter Property="Height" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Viewbox Height="5" Width="0" Margin="0 6 0 0" Stretch="UniformToFill">
                                <Canvas Height="512" Width="512">
                                    <Path x:Name="ico" Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource PrimaryGrayColor}" Margin="0 0 0 0"/>
                                </Canvas>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>

                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuRadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="menuButton"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="45"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <!-- Selected  -->
                                <Border x:Name="btnSelected" Grid.ColumnSpan="2" Width="260" HorizontalAlignment="Right"/>

                                <!-- Icon -->
                                <Image VerticalAlignment="Center" HorizontalAlignment="Right"  Width="30" Height="30">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Source" Value="/Icons/Студенты не акт.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=CloseButton}" Value="True">
                                                    <Setter Property="Source" Value="/Icons/Студенты акт.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Value="True">
                                                    <Setter Property="Source" Value="/Icons/Студенты акт.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>


                                <!-- Text -->
                                <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="12 0 0 0"
                                                Grid.Column="1" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                FontSize="{TemplateBinding FontSize}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="txtName" Property="Foreground" Value="#904A76"/>

                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">

                                <Setter TargetName="btnSelected" Property="Background" Value="#AEE1E4"/>
                                <Setter TargetName="txtName" Property="Foreground" Value="#904A76"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuRadioButtonStyle2" TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="menuButton"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="45"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <!-- Selected  -->
                                <Border x:Name="btnSelected" Grid.ColumnSpan="2" Width="260" HorizontalAlignment="Right"/>

                                <!-- Icon -->
                                <Image VerticalAlignment="Center" HorizontalAlignment="Right"  Width="30" Height="30">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Source" Value="/Icons/Группы не акт.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=CloseButton}" Value="True">
                                                    <Setter Property="Source" Value="/Icons/Группы акт.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Value="True">
                                                    <Setter Property="Source" Value="/Icons/Группы акт.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>


                                <!-- Text -->
                                <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="12 0 0 0"
                                                Grid.Column="1" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                FontSize="{TemplateBinding FontSize}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="txtName" Property="Foreground" Value="#904A76"/>

                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">

                                <Setter TargetName="btnSelected" Property="Background" Value="#AEE1E4"/>
                                <Setter TargetName="txtName" Property="Foreground" Value="#904A76"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuRadioButtonStyle3" TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="menuButton"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="45"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <!-- Selected  -->
                                <Border x:Name="btnSelected" Grid.ColumnSpan="2" Width="260" HorizontalAlignment="Right"/>

                                <!-- Icon -->
                                <Image VerticalAlignment="Center" HorizontalAlignment="Right"  Width="30" Height="30">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Source" Value="/Icons/Пропуски не акт.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=CloseButton}" Value="True">
                                                    <Setter Property="Source" Value="/Icons/Пропуски акт.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Value="True">
                                                    <Setter Property="Source" Value="/Icons/Пропуски акт.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>


                                <!-- Text -->
                                <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="12 0 0 0"
                                                Grid.Column="1" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                FontSize="{TemplateBinding FontSize}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="txtName" Property="Foreground" Value="#904A76"/>

                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">

                                <Setter TargetName="btnSelected" Property="Background" Value="#AEE1E4"/>
                                <Setter TargetName="txtName" Property="Foreground" Value="#904A76"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="Button" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="#B2B2B2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#904A76"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#904A76"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid MouseDown="Grid_MouseDown">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <Border Background="#EBEBEB" Grid.RowSpan="2" CornerRadius="30" Grid.ColumnSpan="2">

        </Border>

        <Border Background="#ffff" BorderBrush="#E4E4E4" BorderThickness="2 0 2 0" Grid.Row="0" Grid.Column="1" Margin="0,0,300,0">
            <TextBlock Text="{Binding ElementName=PagesNavigation, Path=Content.Title}" FontSize="25" Foreground="#B2B2B2" VerticalAlignment="Center" Margin="30 0 0 0"/>
        </Border>

        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top"  Margin="0,0,300,0">
            <Button x:Name="BtnMinimaze" Width="28" Height="28" Margin="0 0 3 0" Click="BtnMinimaze_Click" Style="{DynamicResource Button}">
                <Image VerticalAlignment="Center" HorizontalAlignment="Right"  Width="25" Height="25">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/Icons/Кнопка свернуть не акт.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=BtnMinimaze}" Value="True">
                                    <Setter Property="Source" Value="/Icons/Кнопка свернуть акт.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Value="True">
                                    <Setter Property="Source" Value="/Icons/Кнопка свернуть акт.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <Button x:Name="BtnMaximaze" Width="28" Height="28" Margin="0 0 3 0" Click="BtnMaximaze_Click" Style="{DynamicResource Button}" >
                <Image VerticalAlignment="Center" HorizontalAlignment="Right"  Width="25" Height="25">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/Icons/Кнопка уменьшить 1 не акт.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=BtnMaximaze}" Value="True">
                                    <Setter Property="Source" Value="/Icons/Кнопка уменьшить 1 акт.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Value="True">
                                    <Setter Property="Source" Value="/Icons/Кнопка уменьшить 1 акт.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <Button x:Name="BtnClose" Width="28" Height="28" Margin="0 0 10 0" Click="BtnClose_Click" Style="{DynamicResource Button}">
                <Image VerticalAlignment="Center" HorizontalAlignment="Right"  Width="25" Height="25">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/Icons/Закрыть не акт.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=BtnClose}" Value="True">
                                    <Setter Property="Source" Value="/Icons/Закрыть акт.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Value="True">
                                    <Setter Property="Source" Value="/Icons/Закрыть акт.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
        </StackPanel>
        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 300 0">
            <Button x:Name="BtnBack" Foreground="#5A06EC" FontSize="20" Click="BtnBack_Click" Style="{DynamicResource Button}">
                <Image VerticalAlignment="Center" Margin="0 0 13 0" HorizontalAlignment="Right"  Width="20" Height="20">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/Icons/Назад не акт.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=BtnBack}" Value="True">
                                    <Setter Property="Source" Value="/Icons/Назад акт.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Value="True">
                                    <Setter Property="Source" Value="/Icons/Назад акт.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
        </StackPanel>

        <Border  CornerRadius="30 0 0 30" Grid.RowSpan="2" Background="#171616" >
            <Border CornerRadius="30 0 0 30" Background="#FFFFFF">
                <Grid x:Name="gridMenu" Width="60">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="200"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!--Logo-->
                    <Image Grid.Row="1" Source="/Resources/Лого-ККТД.png" MinWidth="50" MinHeight="50" MaxWidth="200" MaxHeight="200" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="5 0 0 0" />

                    <!--Menu-->
                    <ToggleButton x:Name="btnMenu" Height="150" Width="60" HorizontalAlignment="Center" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" Style="{StaticResource MenuIconStyle}" Cursor="Hand">
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="HideStackPanel">
                                        <DoubleAnimation Storyboard.TargetName="gridMenu" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="260" To="60" Duration="0:0:0.3">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="ShowStackPanel">
                                        <DoubleAnimation Storyboard.TargetName="gridMenu" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="60" To="260" Duration="0:0:0.3">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                    </ToggleButton>

                    <StackPanel Grid.Row="3">
                        <RadioButton x:Name="Students" Content="Студенты" Style="{DynamicResource MenuRadioButtonStyle1}" Cursor="Hand" Margin="2 2 0 0" Click="Students_Click"/>
                        <RadioButton x:Name="Group" Content="Группы" Style="{DynamicResource MenuRadioButtonStyle2}" Margin="2 2 0 0" Cursor="" Click="Group_Click"/>
                        <RadioButton x:Name="Omissions" Content="Пропуски" Style="{DynamicResource MenuRadioButtonStyle3}" Margin="2 2 0 0" Cursor="Hand" Click="Omissions_Click"/>
                    </StackPanel>

                    <Button Style="{DynamicResource Button}" Name="Exit" Grid.Row="3" Margin="0 0 0 30" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="135" Height="25" Click="Exit_Click">
                        <StackPanel Orientation="Horizontal" >
                            <Image Height="20" Width="20" >
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="/Icons/Выход не акт.png"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Exit}" Value="True">
                                                <Setter Property="Source" Value="/Icons/Выход акт.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Value="True">
                                                <Setter Property="Source" Value="/Icons/Выход акт.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="Выход" VerticalAlignment="Center" Margin="20 0 0 0" FontSize="20"/>
                        </StackPanel>
                    </Button>
                </Grid>
            </Border>
        </Border>

        <Frame Grid.Row="2" Grid.Column="2" Margin="25" x:Name="PagesNavigation" ContentRendered="PagesNavigation_ContentRendered" NavigationUIVisibility="Hidden"/>
        
        <Grid x:Name="gridMenu1" Width="300" Height="60" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.RowSpan="2" Grid.Column="1" >
            <Border CornerRadius="0 30 30 0" Background="#ffff">
                <Grid Cursor="">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!--Menu-->
                    <ToggleButton x:Name="btnMenu1"  HorizontalAlignment="Left"  BorderThickness="0" Background="Transparent" VerticalAlignment="Top" Style="{StaticResource MenuIconStyle}" Margin="8 8 10 0" Cursor="Hand" IsChecked="False">
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="HideStackPanel1">
                                        <DoubleAnimation Storyboard.TargetName="gridMenu1" Storyboard.TargetProperty="Height" BeginTime="0:0:0" From="590" To="60" Duration="0:0:0.3">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="ShowStackPanel1">
                                        <DoubleAnimation Storyboard.TargetName="gridMenu1" Storyboard.TargetProperty="Height" BeginTime="0:0:0" From="60" To="590" Duration="0:0:0.3">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                    </ToggleButton>
                    <ListBox x:Name="list" Grid.Row="1" BorderThickness="0" Background="Transparent" HorizontalAlignment="Center" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="IsHitTestVisible" Value="False"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel x:Name="StackPanelProfil" Orientation="Vertical" HorizontalAlignment="Center"  Grid.Row="1">
                                    <Image Name="ImageSotrudnik" Source="{Binding GetPhoto}" Width="180" Height="180" Margin="20"/>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Фамилия}" Foreground="#5A06EC" FontSize="20" Margin="2"/>
                                        <TextBlock Text="{Binding Имя}"  Foreground="#5A06EC" FontSize="20" Margin="2"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding Отчество}" Foreground="#5A06EC" FontSize="20" Margin="2" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding Должность1.Название}" FontSize="20" TextAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" Foreground="#5A06EC"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
